#include <v8.h>
#include <node/node.h>
#include <node/node_object_wrap.h>
#include <math.h>
#include <sys/time.h>

#include <cstdlib>
#include <ctime>
#include <errno.h>

#include <stdint.h>
#include <stdlib.h>
#include <cstring>
#include <iostream>


extern "C"  {
#include "wiringPiSPI.h"
#include "wiringPi.h"
}

using namespace std;
using namespace node;
using namespace v8;

static int readadc(int chan,int adcnum) {
	uint8_t buff[3];
	int adc;
	if ((adcnum > 7) || (adcnum < 0))
		return -1;
	buff[0] = 1;
	buff[1] = (8+adcnum)<<4;
	buff[2] = 0;
	wiringPiSPIDataRW(chan, buff, 3);
	adc = ((buff[1]&3) << 8) + buff[2];
	return adc;
}

static Handle<Value> read(const Arguments& args) {
	int chan, i;
	char outs[100], buff[5], tim[16];
	memset(outs, 0, 100);
	timeval rtime;
	for(chan=0;chan<=1;chan++) {
	    for(i=0;i<=7;i++) {
	  		sprintf(buff,"%d,",readadc(chan,i));
	    	strcat(outs,buff);
	    }
  	}
  	gettimeofday(&rtime, NULL);
	sprintf(tim,"%d.%d",rtime.tv_sec,rtime.tv_usec/1000);
	strcat(outs,tim);
  	return String::New(outs);
}
 
extern "C" Handle<Value> init(Handle<Object> target) {
	NODE_SET_METHOD(target, "read", read);
	int clk;
	clk = 1000000;
	if (wiringPiSPISetup (0, clk) < 0)
    	return ThrowException(
            Exception::TypeError(String::New("Setup failed on Chip 0."))
        );
  	if (wiringPiSPISetup (1, clk) < 0)
    	return ThrowException(
            Exception::TypeError(String::New("Setup failed on Chip 1."))
        );
  	return String::New("Initialized.");
}